{"version":3,"sources":["interfaces/auth.js"],"names":["AuthInterface","options","params","_client","key","callbackUrl","token","encode","username","password","Error","http","get","signed","then","body","session"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;IAGqBA,a;;;;;;;;;;;oCACDC,O,EAAS;AACrB,UAAIC,MAAM,GAAG,EAAb;AAEAD,MAAAA,OAAO,GAAG,wBAAUA,OAAV,IAAqBA,OAArB,GAA+B,EAAzC,CAHqB,CAKrB;;AACAC,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,KAAKC,OAAL,CAAaC,GAAjC;;AAEA,UAAG,wBAAUH,OAAO,CAACI,WAAlB,CAAH,EAAmC;AAC/BH,QAAAA,MAAM,CAAC,IAAD,CAAN,GAAeD,OAAO,CAACI,WAAvB;AACH;;AAED,UAAG,wBAAUJ,OAAO,CAACK,KAAlB,CAAH,EAA6B;AACzBJ,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBD,OAAO,CAACK,KAA1B;AACH,OAdoB,CAgBrB;;;AACA,aAAO,mCAAmC,qBAAYC,MAAZ,CAAmBL,MAAnB,CAA1C;AACH;;;qCAEgBM,Q,EAAUC,Q,EAAU;AACjC,UAAG,CAAC,wBAAUD,QAAV,CAAJ,EAAyB;AACrB,cAAM,IAAIE,KAAJ,CAAU,qDAAV,CAAN;AACH;;AAED,UAAG,CAAC,wBAAUD,QAAV,CAAJ,EAAyB;AACrB,cAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;AACH;;AAED,aAAO,KAAKC,IAAL,CAAUC,GAAV,CAAc,uBAAd,EAAuC;AAC1CV,QAAAA,MAAM,EAAE;AACJM,UAAAA,QAAQ,EAAEA,QADN;AAEJC,UAAAA,QAAQ,EAAEA;AAFN,SADkC;AAM1CI,QAAAA,MAAM,EAAE;AANkC,OAAvC,EAOJC,IAPI,CAOC,UAASC,IAAT,EAAe;AACnB,YAAG,wBAAUA,IAAV,KAAmB,wBAAUA,IAAI,CAACC,OAAf,CAAtB,EAA+C;AAC3C,iBAAOD,IAAI,CAACC,OAAZ;AACH;;AAED,eAAO,IAAP;AACH,OAbM,CAAP;AAcH;;;+BAEUV,K,EAAO;AACd,UAAG,CAAC,wBAAUA,KAAV,CAAJ,EAAsB;AAClB,cAAM,IAAII,KAAJ,CAAU,kDAAV,CAAN;AACH;;AAED,aAAO,KAAKC,IAAL,CAAUC,GAAV,CAAc,iBAAd,EAAiC;AACpCV,QAAAA,MAAM,EAAE;AACJI,UAAAA,KAAK,EAAEA;AADH,SAD4B;AAKpCO,QAAAA,MAAM,EAAE;AAL4B,OAAjC,EAMJC,IANI,CAMC,UAASC,IAAT,EAAe;AACnB,YAAG,wBAAUA,IAAV,KAAmB,wBAAUA,IAAI,CAACC,OAAf,CAAtB,EAA+C;AAC3C,iBAAOD,IAAI,CAACC,OAAZ;AACH;;AAED,eAAO,IAAP;AACH,OAZM,CAAP;AAaH;;;+BAEU;AACP,aAAO,KAAKL,IAAL,CAAUC,GAAV,CAAc,eAAd,EAA+B;AAClCC,QAAAA,MAAM,EAAE;AAD0B,OAA/B,EAEJC,IAFI,CAEC,UAASC,IAAT,EAAe;AACnB,YAAG,wBAAUA,IAAV,KAAmB,wBAAUA,IAAI,CAACT,KAAf,CAAtB,EAA6C;AACzC,iBAAOS,IAAI,CAACT,KAAZ;AACH;;AAED,eAAO,IAAP;AACH,OARM,CAAP;AASH","sourcesContent":["import QueryString from 'querystring';\r\n\r\nimport Interface from './base';\r\nimport {isDefined} from '../core/helpers';\r\n\r\n\r\nexport default class AuthInterface extends Interface {\r\n    getAuthorizeUrl(options) {\r\n        var params = {};\r\n\r\n        options = isDefined(options) ? options : {};\r\n\r\n        // Set parameters\r\n        params['api_key'] = this._client.key;\r\n\r\n        if(isDefined(options.callbackUrl)) {\r\n            params['cb'] = options.callbackUrl;\r\n        }\r\n\r\n        if(isDefined(options.token)) {\r\n            params['token'] = options.token;\r\n        }\r\n\r\n        // Build URL\r\n        return 'https://www.last.fm/api/auth/?' + QueryString.encode(params);\r\n    }\r\n\r\n    getMobileSession(username, password) {\r\n        if(!isDefined(username)) {\r\n            throw new Error('Invalid value provided for the \"username\" parameter');\r\n        }\r\n\r\n        if(!isDefined(password)) {\r\n            throw new Error('Invalid value provided for the \"password\" parameter');\r\n        }\r\n\r\n        return this.http.get('auth.getMobileSession', {\r\n            params: {\r\n                username: username,\r\n                password: password\r\n            },\r\n\r\n            signed: true\r\n        }).then(function(body) {\r\n            if(isDefined(body) && isDefined(body.session)) {\r\n                return body.session;\r\n            }\r\n\r\n            return null;\r\n        });\r\n    }\r\n\r\n    getSession(token) {\r\n        if(!isDefined(token)) {\r\n            throw new Error('Invalid value provided for the \"token\" parameter');\r\n        }\r\n\r\n        return this.http.get('auth.getSession', {\r\n            params: {\r\n                token: token\r\n            },\r\n\r\n            signed: true\r\n        }).then(function(body) {\r\n            if(isDefined(body) && isDefined(body.session)) {\r\n                return body.session;\r\n            }\r\n\r\n            return null;\r\n        });\r\n    }\r\n\r\n    getToken() {\r\n        return this.http.get('auth.getToken', {\r\n            signed: true\r\n        }).then(function(body) {\r\n            if(isDefined(body) && isDefined(body.token)) {\r\n                return body.token;\r\n            }\r\n\r\n            return null;\r\n        });\r\n    }\r\n}\r\n"],"file":"auth.js"}