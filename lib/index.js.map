{"version":3,"sources":["index.js"],"names":["Client","key","secret","options","session","sessionKey","http","_interfaces","_constructInterfaces","result","Object","keys","forEach"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;;;;;;;;;IAEaA,M;AACT,kBAAYC,GAAZ,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;AAAA;;AAC9BA,IAAAA,OAAO,GAAG,wBAAUA,OAAV,IAAqBA,OAArB,GAA+B,EAAzC;AAEA,SAAKF,GAAL,GAAWA,GAAG,IAAI,IAAlB;AACA,SAAKC,MAAL,GAAcA,MAAM,IAAI,IAAxB;AAEA,SAAKE,OAAL,GAAe,IAAf;;AAEA,QAAG,wBAAUD,OAAO,CAACC,OAAlB,CAAH,EAA+B;AAC3B,WAAKA,OAAL,GAAeD,OAAO,CAACC,OAAvB;AACH,KAFD,MAEO,IAAG,wBAAUD,OAAO,CAACE,UAAlB,CAAH,EAAkC;AACrC,WAAKD,OAAL,GAAe;AAACH,QAAAA,GAAG,EAAEE,OAAO,CAACE;AAAd,OAAf;AACH,KAZ6B,CAc9B;;;AACA,SAAKC,IAAL,GAAY,kBAAe,IAAf,CAAZ,CAf8B,CAiB9B;;AACA,SAAKC,WAAL,GAAmB,KAAKC,oBAAL,EAAnB;AACH;;;;oCAce;AACZ,UAAG,CAAC,wBAAU,KAAKJ,OAAf,CAAD,IAA4B,CAAC,wBAAU,KAAKA,OAAL,CAAaH,GAAvB,CAAhC,EAA6D;AACzD,eAAO,IAAP;AACH;;AAED,aAAO,KAAKG,OAAL,CAAaH,GAApB;AACH;;;2CAEsB;AAAA;;AACnB,UAAIQ,MAAM,GAAG,EAAb;AAEAC,MAAAA,MAAM,CAACC,IAAP,sBAAwBC,OAAxB,CAAgC,UAACX,GAAD,EAAS;AACrCQ,QAAAA,MAAM,CAACR,GAAD,CAAN,GAAc,IAAI,oBAAWA,GAAX,CAAJ,CAAoB,KAApB,CAAd;AACH,OAFD;AAIA,aAAOQ,MAAP;AACH;;;wBA5BU;AACP,aAAO,KAAKF,WAAL,CAAiB,MAAjB,CAAP;AACH;;;wBAEW;AACR,aAAO,KAAKA,WAAL,CAAiB,OAAjB,CAAP;AACH;;;wBAEU;AACP,aAAO,KAAKA,WAAL,CAAiB,MAAjB,CAAP;AACH","sourcesContent":["import HttpClient from './core/http';\nimport Interfaces from './interfaces';\nimport {isDefined} from './core/helpers';\n\n\nexport {ApiError, NetworkError} from './core/errors';\n\nexport class Client {\n    constructor(key, secret, options) {\n        options = isDefined(options) ? options : {};\n\n        this.key = key || null;\n        this.secret = secret || null;\n\n        this.session = null;\n\n        if(isDefined(options.session)) {\n            this.session = options.session;\n        } else if(isDefined(options.sessionKey)) {\n            this.session = {key: options.sessionKey};\n        }\n\n        // Construct http client\n        this.http = new HttpClient(this);\n\n        // Construct interfaces\n        this._interfaces = this._constructInterfaces();\n    }\n\n    get auth() {\n        return this._interfaces['auth'];\n    }\n\n    get track() {\n        return this._interfaces['track'];\n    }\n\n    get user() {\n        return this._interfaces['user'];\n    }\n\n    getSessionKey() {\n        if(!isDefined(this.session) || !isDefined(this.session.key)) {\n            return null;\n        }\n\n        return this.session.key;\n    }\n\n    _constructInterfaces() {\n        var result = {};\n\n        Object.keys(Interfaces).forEach((key) => {\n            result[key] = new Interfaces[key](this);\n        });\n\n        return result;\n    }\n}\n"],"file":"index.js"}