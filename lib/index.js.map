{"version":3,"sources":["index.js"],"names":["Client","key","secret","options","session","sessionKey","http","_interfaces","_constructInterfaces","result","Object","keys","forEach"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;IAEaA,M,WAAAA,M;AACT,oBAAYC,GAAZ,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;AAAA;;AAC9BA,kBAAU,wBAAUA,OAAV,IAAqBA,OAArB,GAA+B,EAAzC;;AAEA,aAAKF,GAAL,GAAWA,OAAO,IAAlB;AACA,aAAKC,MAAL,GAAcA,UAAU,IAAxB;;AAEA,aAAKE,OAAL,GAAe,IAAf;;AAEA,YAAG,wBAAUD,QAAQC,OAAlB,CAAH,EAA+B;AAC3B,iBAAKA,OAAL,GAAeD,QAAQC,OAAvB;AACH,SAFD,MAEO,IAAG,wBAAUD,QAAQE,UAAlB,CAAH,EAAkC;AACrC,iBAAKD,OAAL,GAAe,EAACH,KAAKE,QAAQE,UAAd,EAAf;AACH;;AAED;AACA,aAAKC,IAAL,GAAY,mBAAe,IAAf,CAAZ;;AAEA;AACA,aAAKC,WAAL,GAAmB,KAAKC,oBAAL,EAAnB;AACH;;;;wCAce;AACZ,gBAAG,CAAC,wBAAU,KAAKJ,OAAf,CAAD,IAA4B,CAAC,wBAAU,KAAKA,OAAL,CAAaH,GAAvB,CAAhC,EAA6D;AACzD,uBAAO,IAAP;AACH;;AAED,mBAAO,KAAKG,OAAL,CAAaH,GAApB;AACH;;;+CAEsB;AAAA;;AACnB,gBAAIQ,SAAS,EAAb;;AAEAC,mBAAOC,IAAP,uBAAwBC,OAAxB,CAAgC,UAACX,GAAD,EAAS;AACrCQ,uBAAOR,GAAP,IAAc,IAAI,qBAAWA,GAAX,CAAJ,OAAd;AACH,aAFD;;AAIA,mBAAOQ,MAAP;AACH;;;4BA5BU;AACP,mBAAO,KAAKF,WAAL,CAAiB,MAAjB,CAAP;AACH;;;4BAEW;AACR,mBAAO,KAAKA,WAAL,CAAiB,OAAjB,CAAP;AACH;;;4BAEU;AACP,mBAAO,KAAKA,WAAL,CAAiB,MAAjB,CAAP;AACH","file":"index.js","sourcesContent":["import {isDefined} from './core/helpers';\nimport HttpClient from './core/http';\nimport Interfaces from './interfaces';\n\nexport class Client {\n    constructor(key, secret, options) {\n        options = isDefined(options) ? options : {};\n\n        this.key = key || null;\n        this.secret = secret || null;\n\n        this.session = null;\n\n        if(isDefined(options.session)) {\n            this.session = options.session;\n        } else if(isDefined(options.sessionKey)) {\n            this.session = {key: options.sessionKey};\n        }\n\n        // Construct http client\n        this.http = new HttpClient(this);\n\n        // Construct interfaces\n        this._interfaces = this._constructInterfaces();\n    }\n\n    get auth() {\n        return this._interfaces['auth'];\n    }\n\n    get track() {\n        return this._interfaces['track'];\n    }\n\n    get user() {\n        return this._interfaces['user'];\n    }\n\n    getSessionKey() {\n        if(!isDefined(this.session) || !isDefined(this.session.key)) {\n            return null;\n        }\n\n        return this.session.key;\n    }\n\n    _constructInterfaces() {\n        var result = {};\n\n        Object.keys(Interfaces).forEach((key) => {\n            result[key] = new Interfaces[key](this);\n        });\n\n        return result;\n    }\n}\n"],"sourceRoot":"/source/"}